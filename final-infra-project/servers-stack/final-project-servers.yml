Parameters:
  # Paramenters are entirely optional.
  # but using them will make your cloudformation templates more reusable
  # use them for things that may change over time, such as instance type,
  # VPCs and so on.

  ProjectName:
    Description: This project name together with the name of the environment
    Type: String
  AmiId:
    Description: Amazon Machine Image in use
    Type: String
  InstanceType:
    Description: Type of the EC2 instance
    Type: String
  BucketName:
    Description: The name of the Bucket for Application archive
    Type: String
    Default: krzysiekpagaczbucketforapplicationarchive

Resources:
  # instace profile contains the IAM Role name(s) that we want to associate to our auto scaling EC2 Servers
  # never give too much permissions to your EC2 instances! if they get hacked, the permissions get hacked also!
  # in this example, I create a Role called UdacityS3ReadOnlyC2 and just give it a policy of S3 Read-Only Access
  ProfileWithRolesForOurApp:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
      - !Ref UdacityS3ReadOnlyEC2Role

  UdacityS3ReadOnlyEC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole

  UdacityS3ReadOnlyPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3ReadonlyPolicyUdacity
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action:
          - s3:*
          Resource:
          - !Sub arn:aws:s3:::${BucketName}/*
      Roles:
      - !Ref UdacityS3ReadOnlyEC2Role

  AppArchiveS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${BucketName}
  
  WebAppKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: final-project-servers-key

  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer and unrestricted internet access from Load Balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${ProjectName}-MainVpc"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp:
          Fn::ImportValue: MainVpcCidrBlock

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${ProjectName}-MainVpc"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp:
          Fn::ImportValue: MainVpcCidrBlock
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp:
          Fn::ImportValue: MainVpcCidrBlock
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp:
          Fn::ImportValue: MainVpcCidrBlock

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      SecurityGroups:
      - !Ref WebServerSecGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          echo "Udacity Demo Web Server Up and Running!" > index.html      
      ImageId: !Sub ${AmiId}
      IamInstanceProfile: !Ref ProfileWithRolesForOurApp
      KeyName: !Ref WebAppKeyPair
      InstanceType: !Sub ${InstanceType}
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'

  WebAppGroup1:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue:
          !Sub ${ProjectName}-PRIV-SUBNET1
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: 2
      MaxSize: 2
      TargetGroupARNs:
      - Ref: WebAppTargetGroup

  WebAppGroup2:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue:
          !Sub ${ProjectName}-PRIV-SUBNET2
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: 2
      MaxSize: 2
      TargetGroupARNs:
      - Ref: WebAppTargetGroup

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue:
          !Sub ${ProjectName}-PUB-SUBNET1
      - Fn::ImportValue:
          !Sub ${ProjectName}-PUB-SUBNET2
      SecurityGroups:
      - Ref: LBSecGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP

  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 8080
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          !Sub "${ProjectName}-MainVpc"

Outputs: 
  # This is also optional.
  # Bonus points for useful outputs!
  # for example, if you create a Load Balancer
  # it's nice to output the URL to it here, so tWebAppLaunchConfighat we don't have to go to the console to get it.

# Sample UserData
# When creating your Launch Configuration, you may need a UserData script
# here's one that you can use for Ubuntu Linux that will:
# Install Apache Web Server, Start it, and create an index.html that will be displayed
# when you visit the IP address of this server with your web browser
#Here it is:
#
#          #!/bin/bash
#          apt-get update -y
#          apt-get install apache2 -y
#          systemctl start apache2.service
#          cd /var/www/html
#          echo "Udacity Demo Web Server Up and Running!" > index.html
  LoadBalancerUrl:
    Description: The URL to the Load Balancer
    Value: !GetAtt WebAppLB.DNSName

  # LoadBalancerFullName:
  #   Description: The full name of the Load Balancer
  #   Value: !GetAtt WebAppLB.LoadBalancerFullName

  # LoadBalancerSGs:
  #   Description: The securty groupsof the Load Balancer
  #   Value: !GetAtt WebAppLB.SecurityGroups
